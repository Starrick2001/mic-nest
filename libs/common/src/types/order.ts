// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v5.27.2
// source: proto/order.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { Product } from "./product";

export interface Order {
  id: number;
  amount: number;
  orderItems: OrderItems | undefined;
  products: Product[];
}

export interface OrderItem {
  id: number;
  productId: number;
}

export interface OrderItems {
  orderItems: OrderItem[];
}

export interface FindOneOrderDto {
  id: number;
}

export interface OrderServiceClient {
  findOneOrder(request: FindOneOrderDto): Observable<Order>;
}

export interface OrderServiceController {
  findOneOrder(request: FindOneOrderDto): Promise<Order> | Observable<Order> | Order;
}

export function OrderServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["findOneOrder"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("OrderService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("OrderService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ORDER_SERVICE_NAME = "OrderService";
