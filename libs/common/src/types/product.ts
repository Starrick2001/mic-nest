// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v5.27.2
// source: proto/product.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export interface Product {
  id: number;
  name: string;
  price: number;
}

export interface Products {
  products: Product[];
}

export interface FindOneProductDto {
  id: number;
}

export interface FindProductsByIdsDto {
  productIds: number[];
}

export interface ProductServiceClient {
  findOneProduct(request: FindOneProductDto): Observable<Product>;

  findProductsByIds(request: FindProductsByIdsDto): Observable<Product>;
}

export interface ProductServiceController {
  findOneProduct(request: FindOneProductDto): Promise<Product> | Observable<Product> | Product;

  findProductsByIds(request: FindProductsByIdsDto): Observable<Product>;
}

export function ProductServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["findOneProduct", "findProductsByIds"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ProductService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ProductService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PRODUCT_SERVICE_NAME = "ProductService";
